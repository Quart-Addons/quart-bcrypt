Metadata-Version: 2.1
Name: Quart-Bcrypt
Version: 0.0.5
Summary: Brcrypt hashing for Quart.
Home-page: https://github.com/crood58/quart-bcrypt
Author: Chris Rood
Author-email: crood58@gmail.com
License: BSD
Platform: any
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown

# Quart-Bcrypt

Quart-Bcrypt is a Quart extension that provides bcrypt hashing utilities for
your application.

Due to the recent increased prevelance of powerful hardware, such as modern
GPUs, hashes have become increasingly easy to crack. A proactive solution to
this is to use a hash that was designed to be "de-optimized". Bcrypt is such
a hashing facility; unlike hashing algorithms such as MD5 and SHA1, which are
optimized for speed, bcrypt is intentionally structured to be slow.

For sensitive data that must be protected, such as passwords, bcrypt is an
advisable choice.

## Installation

Install the extension with one of the following commands:

    pip install quart-bcrypt

## Usage

To use the extension simply import the class wrapper and pass the Quart app
object back to here. Do so like this:

    from Quart import Quart
    from quart_bcrypt import Bcrypt
    
    app = Quart(__name__)
    bcrypt = Bcrypt(app)

Two primary hashing methods are now exposed by way of the bcrypt object. Use
them like so:

    pw_hash = bcrypt.generate_password_hash('hunter2')
    bcrypt.check_password_hash(pw_hash, 'hunter2') # returns True

Alternatively there are async versions also. Use them like so:

    pw_hash = await bcrypt.async_generate_password_hash('hunter2')
    await bcrypt.async_check_password_hash(pw_hash, 'hunter2') # returns True

## Documentation

Documentation is available here: <https://quart-bcrypt.readthedocs.io/en/latest/>


